#!/usr/bin/env python

import os
import sys
import time
import shutil
import multiprocessing

process_num = str(multiprocessing.cpu_count())

# Try to detect the host platform automatically.
# This is used if no `platform` argument is passed
if sys.platform == "cygwin":
    target_platform = "windows"
else:
    raise ValueError(
        "Could not detect platform automatically, please specify with "
        "platform=<platform>"
    )

opts = Variables([], ARGUMENTS)
opts.Add(EnumVariable(
    "platform",
    "Target platform",
    target_platform,
    allowed_values=("windows"),
    ignorecase=2
))
opts.Add(EnumVariable(
    "arch",
    "Target platform arch",
    "x86_64",
    allowed_values=("x86_64"),
    ignorecase=2
))

env = Environment(ENV = os.environ)
opts.Update(env)
Help(opts.GenerateHelpText(env))

ffmpeg_build_args =\
"--enable-shared" +\
" --disable-postproc" +\
" --disable-avfilter" +\
" --disable-programs --disable-ffmpeg --disable-ffplay --disable-ffprobe" +\
" --disable-doc --disable-htmlpages --disable-manpages --disable-podpages --disable-txtpages" +\
" --quiet"

if env["platform"] == "windows":
    ffmpeg_build_args +=\
    " --arch={}".format(env["arch"]) +\
    " --extra-ldflags='-static'" +\
    " --extra-cflags='-fPIC' --extra-ldflags='-fpic'"


print("build args: " + ffmpeg_build_args)

os.chdir("../ffmpeg")

print("wait for configuring...")
ffmpeg_build_prefix = "../ffmpeg_build/{}/{}".format(
    env["platform"],
    env["arch"]
)
os.system("./configure --prefix={} {}".format(
    ffmpeg_build_prefix
    ffmpeg_build_args
))
time.sleep(5)

os.system(f"make -j {process_num}")
os.system(f"make -j {process_num} install")

shutil.copy2(ffmpeg_build_prefix + "/bin/" + "avcodec-58.dll", "../bin/")
shutil.copy2(ffmpeg_build_prefix + "/bin/" + "avformat-58.dll", "../bin/")
shutil.copy2(ffmpeg_build_prefix + "/bin/" + "avutil-56.dll", "../bin/")
shutil.copy2(ffmpeg_build_prefix + "/bin/" + "swresample-3.dll", "../bin/")
shutil.copy2(ffmpeg_build_prefix + "/bin/" + "swscale-5.dll", "../bin/")
