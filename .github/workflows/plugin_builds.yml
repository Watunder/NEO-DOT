name: ⚙️ Plugin Builds (v0.0.2)
on:
  workflow_dispatch:
    inputs:
      windows-builds-id:
        description: The id of the workflow run.
        type: number
        required: true
      libcriware-build:
        description: If libcriware is to be built.
        default: false
        type: boolean
      libeffekseer-build:
        description: If libeffekseer is to be built.
        default: false
        type: boolean
      libffmpeg-build:
        description: If libffmpeg is to be built.
        default: false
        type: boolean
      libsqlite-build:
        description: If libsqlite is to be built.
        default: false
        type: boolean

jobs:
  define-matrix:
    if: ${{ inputs.libcriware-build || inputs.libeffekseer-build || inputs.libffmpeg-build || inputs.libsqlite-build }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.check-inputs.outputs.matrix }}
    steps:
      - name: Check for inputs
        id: check-inputs
        shell: bash
        run: |
          MATRIX_INCLUDE=()
          [ "${{ inputs.libcriware-build }}" == "true" ] && MATRIX_INCLUDE+=("{\"plugin\":\"godot_criware\",\"msys2\":true}")
          [ "${{ inputs.libeffekseer-build }}" == "true" ] && MATRIX_INCLUDE+=("{\"plugin\":\"godot_effekseer\",\"submodule\":\"effekseer\"}")
          [ "${{ inputs.libffmpeg-build }}" == "true" ] && MATRIX_INCLUDE+=("{\"plugin\":\"godot_ffmpeg\",\"submodule\":\"ffmpeg\",\"msys2\":true}")
          [ "${{ inputs.libsqlite-build }}" == "true" ] && MATRIX_INCLUDE+=("{\"plugin\":\"godot_sqlite\"}")
          MATRIX_JSON="{\"include\": [$(IFS=,; echo "${MATRIX_INCLUDE[*]}")]}"
          echo "matrix=$MATRIX_JSON" >> "$GITHUB_OUTPUT"

  windows-build:
    runs-on: windows-latest
    needs: define-matrix
    name: ${{ matrix.plugin }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.define-matrix.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup python and scons
        uses: ./.github/actions/godot-deps

      - name: Setup MSVC problem matcher
        uses: ammaraskar/msvc-problem-matcher@master

      - name: Setup MSYS2
        if: ${{ matrix.msys2 }}
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: UCRT64
          path-type: inherit

      - name: Download artifact (libgodot)
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ inputs.windows-builds-id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          name: windows-libgodot
          path: "${{ runner.temp }}/libgodot/"

      - name: Copy artifact (libgodot)
        shell: bash
        run: |
          cp -r "${{ runner.temp }}/libgodot/godot-cpp/include/gen/" modules/gdnative/binding/include/
          cp -r "${{ runner.temp }}/libgodot/godot-cpp/bin/" modules/gdnative/binding/
          cp "${{ runner.temp }}/libgodot/godot-headers/gdnative_api_struct.gen.h" modules/gdnative/include/

      - name: Update submodule
        if: ${{ matrix.submodule && matrix.submodule != '' }}
        shell: bash
        run: |
          cd plugins/${{ matrix.plugin }}
          git config --global url."https://github.com/".insteadOf "git@github.com:"
          git submodule update --init --depth 1 ${{ matrix.submodule }}

      - name: Download SDK (godot_criware)
        if: ${{ matrix.msys2 && matrix.plugin == 'godot_criware' }}
        shell: msys2 {0}
        run: |
          cd plugins/godot_criware/criware
          curl -o "${{ runner.temp }}/cri_adx2le_sdk_v2.29.01.zip" https://game.criware.jp/download/10769/?tmstv=1753335372
          7z x "${{ runner.temp }}/cri_adx2le_sdk_v2.29.01.zip"
          mv -f cri adx2le

          find adx2le/ -type f \( -name "*.h" -o -name "*.cpp" \) | while read -r file; do
            temp_file="${file}.utf8"
            if file -i "$file" | grep -q "charset=unknown"; then
              if iconv -f CP932 -t UTF-8 "$file" > "$temp_file"; then
                  mv -f "$temp_file" "$file"
                  echo "(CP932 to UTF-8) $file"
              else
                  rm -f "$temp_file"
              fi
            fi
          done

      - name: Compilation
        if: ${{ matrix.plugin != 'godot_ffmpeg' }}
        shell: bash
        run: |
          scons --directory=plugins/${{ matrix.plugin }} platform=windows target=release bits=64 --jobs=2

      - name: Compilation (godot_ffmpeg)
        if: ${{ matrix.msys2 && matrix.plugin == 'godot_ffmpeg' }}
        shell: msys2 {0}
        run: |
          pacman -Syu --noconfirm diffutils make nasm pkg-config
          scons --directory=plugins/${{ matrix.plugin }} platform=windows target=release bits=64 --jobs=2

      - name: Prepare artifact
        shell: bash
        run: |
          find plugins/${{ matrix.plugin }}/bin/ -type f \( -name "*.exp" -o -name "*.lib" \) -exec rm -f {} +

      - name: Upload artifact
        uses: ./.github/actions/upload-artifact
        with:
          name: windows-${{ matrix.plugin }}
          path: "plugins/${{ matrix.plugin }}/bin/*"
