name: üèÅ Windows Builds (v0.0.2)
on:
  workflow_call:
  workflow_dispatch:
    inputs:
      libgodot-build:
        description: If libgodot is to be built.
        default: false
        type: boolean

# Global Settings
# SCONS_CACHE for windows must be set in the build environment
env:
  # Only used for the cache key. Increment version to force clean build.
  GODOT_BASE_BRANCH: 3.3
  SCONSFLAGS: verbose=yes warnings=all werror=yes debug_symbols=no
  SCONS_CACHE_MSVC_CONFIG: true

concurrency:
  group: ci-${{ github.actor }}-${{ github.head_ref || github.run_number }}-${{ github.ref }}-windows_builds
  cancel-in-progress: true

jobs:
  build-windows:
    # Windows with latest image
    runs-on: windows-latest
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor (target=release_debug, tools=yes, vsproj=yes)
            cache-name: windows-editor
            target: release_debug
            tools: true
            sconsflags: vsproj=yes
            bin: "./bin/godot.windows.opt.tools.64.exe"

          - name: Template (target=release, tools=no)
            cache-name: windows-template
            target: release
            tools: false

    steps:
      - uses: actions/checkout@v4

      - name: Restore Godot build cache
        uses: ./.github/actions/godot-cache-restore
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Setup python and scons
        uses: ./.github/actions/godot-deps

      - name: Setup MSVC problem matcher
        uses: ammaraskar/msvc-problem-matcher@master

      - name: Compilation
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }}
          platform: windows
          target: ${{ matrix.target }}
          tools: ${{ matrix.tools }}

      - name: Save Godot build cache
        uses: ./.github/actions/godot-cache-save
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Prepare artifact
        shell: bash
        run: |
          find bin/ -type f \( -name "*.exp" -o -name "*.lib" -o -name "*.pdb" \) -exec rm -f {} +

      - name: Upload artifact
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}

      - name: Compilation (libgodot)
        if: ${{ github.event.inputs.libgodot-build && matrix.tools }}
        uses: ./.github/actions/libgodot-build
        with:
          bin: ${{ matrix.bin }}
          platform: windows

      - name: Prepare artifact (libgodot)
        if: ${{ github.event.inputs.libgodot-build && matrix.tools }}
        shell: bash
        run: |
          mkdir -p "${{ runner.temp }}/libgodot/godot-headers/"
          mkdir -p "${{ runner.temp }}/libgodot/godot-cpp/include/"
          mkdir -p "${{ runner.temp }}/libgodot/godot-cpp/bin/"

          cp -r modules/gdnative/include/** "${{ runner.temp }}/libgodot/godot-headers/"
          cp -r modules/gdnative/binding/include/** "${{ runner.temp }}/libgodot/godot-cpp/include/"
          cp -r modules/gdnative/binding/bin/** "${{ runner.temp }}/libgodot/godot-cpp/bin/"

      - name: Upload artifact (libgodot)
        if: ${{ github.event.inputs.libgodot-build && matrix.tools }}
        uses: ./.github/actions/upload-artifact
        with:
          name: windows-libgodot
          path: "${{ runner.temp }}/libgodot/**"
